/* 
 * Date: May 20, 2021
 * Name: Arpitha, Amy, John Michael, Nicole
 * Teacher: Mr. Ho
 * Description: GUI on tournament brackets
 */
 
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

public class TournamentBrackets {
    public static void main(String[] args) {
        createWindow();
    }

    // Create a window to pop up
    private static void createWindow() {
        JFrame frame = new JFrame("Choosing File");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        // Add new box layout on the frame to align names 
        frame.getContentPane().setLayout(new BoxLayout(frame.getContentPane(), BoxLayout.Y_AXIS));
        createUI(frame);
        // set the Window size
        frame.setSize(800, 600);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }

    // Assign variables to be used in more than one method 
    // Array list - array that changes in size depending on the number of names (from while loop)

    static List<String> nameArr = new ArrayList<String>();
    static int lineNum = 0;

    private static void createUI(final JFrame frame) {
        JPanel panel = new JPanel();

        // Set a button to start
        JButton button = new JButton("Click Me To Choose!");
        final JLabel label = new JLabel();

        panel.add(button);
        panel.add(label);

        // Display buttons and labels on left side of the border layout 
        frame.getContentPane().add(panel, BorderLayout.WEST);

        // Makes button actionable 
        button.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {

                // Chose file to be read 
                JFileChooser fileChooser = new JFileChooser();
                int option = fileChooser.showOpenDialog(frame);
                if (option == JFileChooser.APPROVE_OPTION) {
                    // Get the file
                    File file = fileChooser.getSelectedFile();
                    label.setText("File Selected: " + file.getName());

                    // Create scanner to read the whole file 
                    Scanner sc = null;
                    try {
                        sc = new Scanner(file);
                        // Consume the first line of labels and start from the 2nd line
                        sc.nextLine();
                        // Check if there is another line of input
                        while (sc.hasNextLine()) {
                            lineNum++;
                            String str = sc.nextLine();

                            // Create new scanner to read each line by delimeter 
                            Scanner lineScanner = new Scanner(str);
                            // Parse each line using delimiter

                            lineScanner.useDelimiter(",");
                            String name = lineScanner.next();
                            String school = lineScanner.next();
                            String winRate = lineScanner.next();

                            // Adds names into the array list by the while loop
                            nameArr.add(name);

                            // Choose file and labels should not be seen when names are displayed 

                            button.setVisible(false);
                            label.setVisible(false);

                            // Makes names into buttons 
                            JButton nameButtons = new JButton(name); 
                            panel.add(nameButtons);

                            // Adds buttons into panel aligned on the left side 
                            panel.setAlignmentX(Component.LEFT_ALIGNMENT);

                            // Lays out components as expected if the layout is managed correctly
                            panel.setPreferredSize(new Dimension(200, 900));

                            // Maximum size of the column of names 
                            panel.setMaximumSize(new Dimension(160, 1200));  

                            // Adds panel only the frame 
                            frame.getContentPane().add(panel);
                            frame.setSize(800, 600);
                            frame.setVisible(true);
                        }
                    } 
                    catch (IOException exp) {
                        // TODO Auto-generated catch block
                        exp.printStackTrace();
                    } 
                    finally {
                        if (sc != null) 
                            sc.close();
                        
                    }
                    // Returns all elements from beginning of array list in order 
                    String[] namesArr = nameArr.toArray(new String[0]);

                    // .size() find the size of the array list 
                    for (int i = 0; i < nameArr.size(); i++) {
                        System.out.println(namesArr[i]);
                    }
                    

                } 
                else {
                    label.setText("Open command canceled");
                }
            }
        });
    }   
}
